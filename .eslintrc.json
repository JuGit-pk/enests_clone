{
  "plugins": ["@typescript-eslint"],
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "eslint:recommended",
    "next",
    "prettier" // Add "prettier" last. This will turn off eslint rules conflicting with prettier. This is not what will format our code.
  ],
  "rules": {
    // I suggest you add those two rules:
    // "prefer-const": "off", // Turn rule off
    "no-console": "warn", // Turn rule off
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-explicit-any": "warn"
    // "simple-import-sort/imports": "error",
    // "simple-import-sort/exports": "error"
  }
  // "overrides": [
  //   // override "simple-import-sort" config
  //   {
  //     "files": ["*.js", "*.jsx", "*.ts", "*.tsx"]
  //     // "rules": {
  //     //   "simple-import-sort/imports": [
  //     //     "error",
  //     //     {
  //     //       "groups": [
  //     //         // Packages `react` related packages come first.
  //     //         ["^react", "^next", "^@?\\w"],
  //     //         // Internal packages.
  //     //         ["^(@|components)(/.*|$)"],
  //     //         // Side effect imports.
  //     //         ["^\\u0000"],
  //     //         // Parent imports. Put `..` last.
  //     //         ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
  //     //         // Other relative imports. Put same-folder imports and `.` last.
  //     //         ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
  //     //         // Style imports.
  //     //         ["^.+\\.?(css)$"]
  //     //       ]
  //     //     }
  //     //   ]
  //     // }
  //   }
  // ]
}
